buildscript {
    ext {
        springBootVersion = '2.2.4.RELEASE'
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

plugins {
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.zero'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '12'

apply plugin: 'docker'
apply plugin: 'org.springframework.boot'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}

dependencies {
    ['armeria',
     'armeria-spring-boot-autoconfigure'].each {
        compile "com.linecorp.armeria:${it}:0.97.0"
    }
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.webjars:sockjs-client:1.1.2'
    implementation 'org.webjars:stomp-websocket:2.3.3-1'
    implementation 'com.google.code.gson:gson:2.8.0'
    compile("org.slf4j:slf4j-api:1.7.7")
    compile 'org.awaitility:awaitility'
    compile('org.springframework.boot:spring-boot-starter')
    compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.3.5.RELEASE'
    compileOnly 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly('org.projectlombok:lombok')
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testCompile 'org.assertj:assertj-core'
    testCompile group: 'org.springframework.kafka', name: 'spring-kafka-test', version: '2.3.5.RELEASE'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile 'junit:junit:4.12'
    runtime 'ch.qos.logback:logback-classic:1.2.3'
    runtime 'org.slf4j:log4j-over-slf4j:1.7.29'
}

test {
    testLogging {
        showStandardStreams = true
        showCauses = true
        showExceptions = true
        showStackTraces = true
        exceptionFormat = 'full'
    }
}

task buildDocker(type: Docker, dependsOn: build) {
    // push = true
    applicationName = jar.baseName
    dockerfile = file('dockerCompose/spring/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}